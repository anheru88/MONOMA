<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="AppServiceProvider.php" path="/Providers">
    <totals>
      <lines total="25" comments="8" code="17" executable="2" executed="2" percent="100.00"/>
      <methods count="2" tested="2" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Providers\AppServiceProvider" start="7" executable="2" executed="2" crap="2">
      <namespace name="App\Providers"/>
      <method name="register" signature="register(): void" start="12" end="15" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="boot" signature="boot(): void" start="20" end="23" crap="1" executable="1" executed="1" coverage="100"/>
    </class>
    <coverage>
      <line nr="15">
        <covered by="Tests\Unit\Actions\AuthUserActionTest::it_can_authenticate_user_and_return_token"/>
        <covered by="Tests\Unit\Actions\AuthUserActionTest::it_throws_login_exception_for_invalid_password"/>
        <covered by="Tests\Unit\Actions\AuthUserActionTest::it_throws_login_exception_for_inactive_user"/>
        <covered by="Tests\Unit\Repositories\EloquentUserRepositoryTest::it_can_find_user_by_username"/>
        <covered by="Tests\Unit\Repositories\EloquentUserRepositoryTest::it_throws_model_not_found_exception_if_username_not_found"/>
        <covered by="Tests\Unit\Repositories\EloquentUserRepositoryTest::it_can_create_personal_access_token_for_user"/>
        <covered by="Tests\Feature\Controllers\Api\AuthControllerTest::it_returns_token_on_successful_authentication"/>
        <covered by="Tests\Feature\Controllers\Api\AuthControllerTest::it_handles_login_exception_and_returns_error_response"/>
        <covered by="Tests\Feature\Controllers\Api\AuthControllerTest::it_handles_login_exception_and_returns_error_response_when_user_is_inactive"/>
        <covered by="Tests\Feature\ExampleTest::test_the_application_returns_a_successful_response"/>
      </line>
      <line nr="23">
        <covered by="Tests\Unit\Actions\AuthUserActionTest::it_can_authenticate_user_and_return_token"/>
        <covered by="Tests\Unit\Actions\AuthUserActionTest::it_throws_login_exception_for_invalid_password"/>
        <covered by="Tests\Unit\Actions\AuthUserActionTest::it_throws_login_exception_for_inactive_user"/>
        <covered by="Tests\Unit\Repositories\EloquentUserRepositoryTest::it_can_find_user_by_username"/>
        <covered by="Tests\Unit\Repositories\EloquentUserRepositoryTest::it_throws_model_not_found_exception_if_username_not_found"/>
        <covered by="Tests\Unit\Repositories\EloquentUserRepositoryTest::it_can_create_personal_access_token_for_user"/>
        <covered by="Tests\Feature\Controllers\Api\AuthControllerTest::it_returns_token_on_successful_authentication"/>
        <covered by="Tests\Feature\Controllers\Api\AuthControllerTest::it_handles_login_exception_and_returns_error_response"/>
        <covered by="Tests\Feature\Controllers\Api\AuthControllerTest::it_handles_login_exception_and_returns_error_response_when_user_is_inactive"/>
        <covered by="Tests\Feature\ExampleTest::test_the_application_returns_a_successful_response"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Providers</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Support\ServiceProvider</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6"/>
      <line no="7">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">AppServiceProvider</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ServiceProvider</token>
      </line>
      <line no="8">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="9">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="10">
        <token name="T_DOC_COMMENT">     * Register any application services.</token>
      </line>
      <line no="11">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="12">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">register</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="13">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="14">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//</token>
      </line>
      <line no="15">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="16"/>
      <line no="17">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="18">
        <token name="T_DOC_COMMENT">     * Bootstrap any application services.</token>
      </line>
      <line no="19">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">boot</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="24">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="25"/>
    </source>
  </file>
</phpunit>
