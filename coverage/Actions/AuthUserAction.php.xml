<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="AuthUserAction.php" path="/Actions">
    <totals>
      <lines total="47" comments="8" code="39" executable="10" executed="10" percent="100.00"/>
      <methods count="2" tested="2" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Actions\AuthUserAction" start="12" executable="10" executed="10" crap="4">
      <namespace name="App\Actions"/>
      <method name="__construct" signature="__construct(App\Repositories\Contracts\UserRepositoryInterface $userRepository)" start="19" end="22" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="handler" signature="handler(array $data): Laravel\Passport\PersonalAccessTokenResult" start="29" end="45" crap="3" executable="9" executed="9" coverage="100"/>
    </class>
    <coverage>
      <line nr="21">
        <covered by="Tests\Unit\Actions\AuthUserActionTest::it_can_authenticate_user_and_return_token"/>
        <covered by="Tests\Unit\Actions\AuthUserActionTest::it_throws_login_exception_for_invalid_password"/>
        <covered by="Tests\Unit\Actions\AuthUserActionTest::it_throws_login_exception_for_inactive_user"/>
        <covered by="Tests\Feature\Controllers\Api\AuthControllerTest::it_returns_token_on_successful_authentication"/>
        <covered by="Tests\Feature\Controllers\Api\AuthControllerTest::it_handles_login_exception_and_returns_error_response"/>
        <covered by="Tests\Feature\Controllers\Api\AuthControllerTest::it_handles_login_exception_and_returns_error_response_when_user_is_inactive"/>
      </line>
      <line nr="31">
        <covered by="Tests\Unit\Actions\AuthUserActionTest::it_can_authenticate_user_and_return_token"/>
        <covered by="Tests\Unit\Actions\AuthUserActionTest::it_throws_login_exception_for_invalid_password"/>
        <covered by="Tests\Unit\Actions\AuthUserActionTest::it_throws_login_exception_for_inactive_user"/>
        <covered by="Tests\Feature\Controllers\Api\AuthControllerTest::it_returns_token_on_successful_authentication"/>
        <covered by="Tests\Feature\Controllers\Api\AuthControllerTest::it_handles_login_exception_and_returns_error_response"/>
        <covered by="Tests\Feature\Controllers\Api\AuthControllerTest::it_handles_login_exception_and_returns_error_response_when_user_is_inactive"/>
      </line>
      <line nr="33">
        <covered by="Tests\Unit\Actions\AuthUserActionTest::it_can_authenticate_user_and_return_token"/>
        <covered by="Tests\Unit\Actions\AuthUserActionTest::it_throws_login_exception_for_invalid_password"/>
        <covered by="Tests\Unit\Actions\AuthUserActionTest::it_throws_login_exception_for_inactive_user"/>
        <covered by="Tests\Feature\Controllers\Api\AuthControllerTest::it_returns_token_on_successful_authentication"/>
        <covered by="Tests\Feature\Controllers\Api\AuthControllerTest::it_handles_login_exception_and_returns_error_response"/>
        <covered by="Tests\Feature\Controllers\Api\AuthControllerTest::it_handles_login_exception_and_returns_error_response_when_user_is_inactive"/>
      </line>
      <line nr="34">
        <covered by="Tests\Unit\Actions\AuthUserActionTest::it_throws_login_exception_for_invalid_password"/>
        <covered by="Tests\Feature\Controllers\Api\AuthControllerTest::it_handles_login_exception_and_returns_error_response"/>
      </line>
      <line nr="35">
        <covered by="Tests\Unit\Actions\AuthUserActionTest::it_throws_login_exception_for_invalid_password"/>
        <covered by="Tests\Feature\Controllers\Api\AuthControllerTest::it_handles_login_exception_and_returns_error_response"/>
      </line>
      <line nr="36">
        <covered by="Tests\Unit\Actions\AuthUserActionTest::it_throws_login_exception_for_invalid_password"/>
        <covered by="Tests\Feature\Controllers\Api\AuthControllerTest::it_handles_login_exception_and_returns_error_response"/>
      </line>
      <line nr="40">
        <covered by="Tests\Unit\Actions\AuthUserActionTest::it_can_authenticate_user_and_return_token"/>
        <covered by="Tests\Unit\Actions\AuthUserActionTest::it_throws_login_exception_for_inactive_user"/>
        <covered by="Tests\Feature\Controllers\Api\AuthControllerTest::it_returns_token_on_successful_authentication"/>
        <covered by="Tests\Feature\Controllers\Api\AuthControllerTest::it_handles_login_exception_and_returns_error_response_when_user_is_inactive"/>
      </line>
      <line nr="41">
        <covered by="Tests\Unit\Actions\AuthUserActionTest::it_throws_login_exception_for_inactive_user"/>
        <covered by="Tests\Feature\Controllers\Api\AuthControllerTest::it_handles_login_exception_and_returns_error_response_when_user_is_inactive"/>
      </line>
      <line nr="44">
        <covered by="Tests\Unit\Actions\AuthUserActionTest::it_can_authenticate_user_and_return_token"/>
        <covered by="Tests\Feature\Controllers\Api\AuthControllerTest::it_returns_token_on_successful_authentication"/>
      </line>
      <line nr="37">
        <covered by="Tests\Unit\Actions\AuthUserActionTest::it_throws_login_exception_for_invalid_password"/>
        <covered by="Tests\Feature\Controllers\Api\AuthControllerTest::it_handles_login_exception_and_returns_error_response"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Actions</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Actions\Contracts\AuthUserActionInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Exceptions\LoginException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Repositories\Contracts\UserRepositoryInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Laravel\Passport\PersonalAccessTokenResult</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Component\HttpFoundation\Response</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10"/>
      <line no="11"/>
      <line no="12">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">AuthUserAction</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IMPLEMENTS">implements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">AuthUserActionInterface</token>
      </line>
      <line no="13">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="14">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UserRepositoryInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$userRepository</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="15"/>
      <line no="16">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="17">
        <token name="T_DOC_COMMENT">     * @param  UserRepositoryInterface  $userRepository</token>
      </line>
      <line no="18">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">UserRepositoryInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$userRepository</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">userRepository</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$userRepository</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="23"/>
      <line no="24">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="25">
        <token name="T_DOC_COMMENT">     * @param  array  $data</token>
      </line>
      <line no="26">
        <token name="T_DOC_COMMENT">     * @return PersonalAccessTokenResult</token>
      </line>
      <line no="27">
        <token name="T_DOC_COMMENT">     * @throws LoginException</token>
      </line>
      <line no="28">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">handler</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PersonalAccessTokenResult</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">userRepository</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">findByUsername</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'username'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="32"/>
      <line no="33">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">password_verify</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'password'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">password</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">LoginException</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Password incorrect for: '</token>
        <token name="T_DOT">.</token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'username'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">Response</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">HTTP_BAD_REQUEST</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="39"/>
      <line no="40">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">is_active</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">LoginException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'User is inactive'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Response</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">HTTP_UNAUTHORIZED</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="43"/>
      <line no="44">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">userRepository</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">createToken</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="46">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="47"/>
    </source>
  </file>
</phpunit>
